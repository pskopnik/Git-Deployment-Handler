#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os.path, os, sys, re
from gitdh import gitdh, git
from tempfile import NamedTemporaryFile

def getExePath(file):
	"""Similar to the UNIX command `which`, but returns the whole file path, not just the directory."""
	for directory in os.environ["PATH"].split(':'):
		filePath = os.path.join(directory, file)
		if os.path.exists(filePath) and os.path.isfile(filePath):
			return filePath
	raise Exception("File not found")

if len(sys.argv) >= 2 and sys.argv[1] == "--install":
	source = getExePath(os.path.basename(__file__))
	symlink = "post-receive"
	if len(sys.argv) >= 4 and sys.argv[2] == "--name":
		symlink = sys.argv[3]
	os.symlink(source, symlink)
	exit(0)

hooksPath = os.path.dirname(os.path.abspath(__file__))
repositoryDir=os.path.abspath(os.path.join(hooksPath, os.pardir))
gC = git.Git(repositoryDir=repositoryDir)

if not "gitdh" in gC.getBranches():
	exit(0)


gFile = None
for file in gC.getFiles(branch="gitdh"):
	if file.getFileName() == "gitdh.conf":
		gFile = file
		break
if gFile == None:
	exit(0)

tmpConfigFile = NamedTemporaryFile()
tmpConfigFile.write(gFile.getFileContent().encode())
tmpConfigFile.flush()

try:
	while True:
		rawInput = input()
		gitdh.gitDhMain(tmpConfigFile.name, "postreceive", rawInput.split(" "))
except EOFError:
	pass
except Exception:
	raise

tmpConfigFile.close()
